1. List the name of different cities from where applicants belong to.

SELECT DISTINCT CITY FROM APPLICANT;

+-----------+
| city      |
+-----------+
| Manglore  |
| Banglore  |
| Hyderabad |
| Chennai   |
| Mysore    |
+-----------+

2. List the different semesters in which students have enrolled.

SELECT DISTINCT SEMESTER FROM REGISTRATION R JOIN COURSE C ON R.COURSE_ID = C.COURSE_ID;

+----------+
| semester |
+----------+
| 2        |
| 1        |
| 4        |
| 3        |
+----------+


3. List the distinct InstructorId and courseid from CourseAllocation table.


SELECT DISTINCT COURSEID,INSTRUCTORID FROM COURSEALLOCATION;

+----------+--------------+
| courseid | instructorid |
+----------+--------------+
| C2       | I009         |
| C5       | I010         |
| C3       | I006         |
| C2       | I005         |
| C4       | I015         |
| C6       | I004         |
| C1       | I012         |
| C1       | I003         |
+----------+--------------+

4. List the name of course which are not electives.

SELECT COURSE_ID,COURSE_TYPE FROM COURSE WHERE COURSE_TYPE != 'ELECTIVE';

+-----------+-------------+
| course_id | course_type |
+-----------+-------------+
| C3        | CORE        |
| C9        | CORE        |
| C5        | CORE        |
| C6        | CORE        |
| C7        | CORE        |
| C2        | CORE        |
| C1        | CORE        |
+-----------+-------------+



5. List the name of instructor who has joined before 01-jan-2002

SELECT INSTRUCTORNAME,DATEOFJOINING FROM INSTRUCTOR WHERE FROM_UNIXTIME(UNIX_TIMESTAMP(DATEOFJOINING,'dd-MMM-yy')) < '2002-01-01 00:00:00';

+----------------+---------------+
| instructorname | dateofjoining |
+----------------+---------------+
| KIRAN          | 02-FEB-01     |
| SUNDAR PICHAI  | 01-JAN-01     |
+----------------+---------------+

6. List Id of courses whose ending date is before the current system date.

SELECT COURSEID FROM COURSEALLOCATION WHERE FROM_UNIXTIME(UNIX_TIMESTAMP(ENDDATE,'dd-MMM-yy')) > FROM_UNIXTIME(UNIX_TIMESTAMP());

+----------+
| courseid |
+----------+
| C4       |
+----------+

7. List the name of applicant from Mysore and Bangalore.

SELECT APP_NAME FROM APPLICANT WHERE CITY IN ('Banglore','Mysore');

+----------------+
| app_name       |
+----------------+
| Amar Sahith    |
| Vinay Kumar    |
| Ravindra Reddy |
+----------------+

8. List the name of applicants who do not belong to Mysore.

SELECT APP_NAME FROM APPLICANT WHERE CITY NOT IN ('Mysore');\

+------------------+
| app_name         |
+------------------+
| Rahul Praksah    |
| Raghu Ram        |
| Subramani Mahesh |
| Devanand Prasad  |
| Ravindra Reddy   |
| Amar Sahith      |
+------------------+

9. List the name of semester 1 and semester 2 courses which belongs to branch B1.

SELECT COURSE_ID,SEMESTER,BRANCH FROM COURSE WHERE SEMESTER IN ('1','2') AND BRANCH = 'B1';

+-----------+----------+--------+
| course_id | semester | branch |
+-----------+----------+--------+
| C3        | 2        | B1     |
| C1        | 1        | B1     |
+-----------+----------+--------+

10. List the name of courses which are elective and project marks is equal to 20.

SELECT COURSE_NAME,COURSE_TYPE,PROJ_MARKS FROM COURSE C JOIN REGISTRATION R ON C.COURSE_ID = R.COURSE_ID
WHERE PROJ_MARKS = 20 AND COURSE_TYPE = 'ELECTIVE';

+-------------+-------------+------------+
| course_name | course_type | proj_marks |
+-------------+-------------+------------+
| DATA MINING | ELECTIVE    | 20         |
| JAVA EE     | ELECTIVE    | 20         |
+-------------+-------------+------------+

11. List the name of the course in which project marks is greater than the semester marks.

SELECT COURSE_NAME,PROJ_MARKS,SEM_MARKS FROM COURSE C JOIN REGISTRATION R ON C.COURSE_ID = R.COURSE_ID
WHERE R.PROJ_MARKS > R.SEM_MARKS;

+-------------------------+------------+-----------+
| course_name             | proj_marks | sem_marks |
+-------------------------+------------+-----------+
| CPP PROGRAMMING         | 19         | 16        |
| ARTIFICIAL INTELLIGENCE | 28         | 3         |
| C PROGRAMMING           | 9          | 8         |
+-------------------------+------------+-----------+

12. List the details of all the applicant who belong to Bangalore, Mysore or Hydrabad

SELECT * FROM APPLICANT WHERE CITY IN ('Banglore','Mysore','Hyderabad');

+--------+------------------+--------------------------+-----------------------+-----------+
| app_id | app_name         | email                    | address               | city      |
+--------+------------------+--------------------------+-----------------------+-----------+
| 1014   | Ravindra Reddy   | NULL                     | 2-23 Kormangala       | Mysore    |
| 1012   | Vinay Kumar      | vinay_238@gmail          | 36/A Jayadev Junction | Mysore    |
| 1016   | Devanand Prasad  | dp_237@gmail.com         | 2A-Electronic City    | Hyderabad |
| 1008   | Subramani Mahesh | subbutamma@gmail.com     | 2-45A Banglore        | Hyderabad |
| 1006   | Amar Sahith      | amarsahith_234@gmail.com | 2-46A Marthalli       | Banglore  |
+--------+------------------+--------------------------+-----------------------+-----------+

13. List the details of courses which are taught in semester 1, 2 or 3.

SELECT * FROM COURSE WHERE SEMESTER IN ('1','2','3');

+-----------+-------------------------+-------------+----------+--------+
| course_id | course_name             | course_type | semester | branch |
+-----------+-------------------------+-------------+----------+--------+
| C3        | CPP PROGRAMMING         | CORE        | 2        | B1     |
| C2        | UNIX SCRIPTING          | CORE        | 1        | B2     |
| C5        | OPERATING SYSEMS        | CORE        | 3        | B6     |
| C6        | ARTIFICIAL INTELLIGENCE | CORE        | 3        | B1     |
| C4        | DATA MINING             | ELECTIVE    | 3        | B4     |
| C1        | C PROGRAMMING           | CORE        | 1        | B1     |
+-----------+-------------------------+-------------+----------+--------+

14. List the studentId who have secured marks between 80 to 100.

SELECT DISTINCT APP_NAME,ISNULL(PROJ_MARKS,0) + ISNULL(ASSIGN_MARKS,0) + ISNULL(INTER_MARKS,0) + ISNULL(SEM_MARKS,0) TOTAL_MARKS FROM REGISTRATION R JOIN STUDENT S ON R.STUD_ID = S.STD_ID JOIN APPLICANT A ON A.APP_ID = S.APP_ID HAVING TOTAL_MARKS BETWEEN 80 AND 100;

+------------------+-------------+
| app_name         | total_marks |
+------------------+-------------+
| Rahul Praksah    | 95          |
| Subramani Mahesh | 87          |
| Rahul Praksah    | 91          |
| Vinay Kumar      | 83          |
| Devanand Prasad  | 82          |
+------------------+-------------+

15. List the student details in ascending order of their applicantid.

SELECT * FROM STUDENT ORDER BY APP_ID;

+--------+--------+----------+---------+-------------+
| std_id | app_id | curr_sem | user_id | password    |
+--------+--------+----------+---------+-------------+
| S001   | 1004   | 1        | USER001 | PASSWORD001 |
| S002   | 1008   | 2        | USER002 | PASSWORD002 |
| S002   | 1008   | 2        | USER002 | PASSWORD002 |
| S003   | 1010   | 3        | USER003 | PASSWORD003 |
| S004   | 1012   | 6        | USER004 | PASSWORD004 |
| S005   | 1016   | 1        | USER005 | PASSWORD005 |
| S006   | 1018   | 2        | USER006 | PASSWORD006 |
+--------+--------+----------+---------+-------------+


#16. List the details of instructor on ascending order of their date of joining.

SELECT INSTRUCTORNAME,FROM_UNIXTIME(UNIX_TIMESTAMP(DATEOFJOINING,'dd-MMM-yy')) DOJ FROM INSTRUCTOR ORDER BY DOJ;

+-----------------+---------------------+
| instructorname  | doj                 |
+-----------------+---------------------+
| SUNDAR PICHAI   | 2001-01-01 00:00:00 |
| KIRAN           | 2001-02-02 00:00:00 |
| ARAVIND         | 2002-01-01 00:00:00 |
| PHILIP JOSEPH   | 2002-02-02 00:00:00 |
| ALBERT EINSTEIN | 2005-09-02 00:00:00 |
| MARK ZUCKERBERG | 2006-02-26 00:00:00 |
| JEFF BEZOS      | 2007-05-19 00:00:00 |
| STEVE JOBS      | 2010-08-12 00:00:00 |
| KIRAN           | 2012-04-14 00:00:00 |
| RAVINDRAN       | 2017-02-02 00:00:00 |
| RAGHAVENDRAN    | 2017-02-02 00:00:00 |
| HARSHA KUMAR    | 2020-02-02 00:00:00 |
| RAJENDRAN       | 2094-03-01 00:00:00 |
| SATYA NADENDLA  | NULL                |
| THOMAS EDISON   | NULL                |
+-----------------+---------------------+


#17. List the details of instructor on descending order of department no and ascending order of Joining date.

SELECT INSTRUCTORNAME,FROM_UNIXTIME(UNIX_TIMESTAMP(DATEOFJOINING,'dd-MMM-yy')) DOJ,DEPARTMENTID FROM INSTRUCTOR ORDER BY DEPARTMENTID DESC,DOJ;
+-----------------+---------------------+--------------+
| instructorname  | doj                 | departmentid |
+-----------------+---------------------+--------------+
| KIRAN           | 2001-02-02 00:00:00 | 6            |
| PHILIP JOSEPH   | 2002-02-02 00:00:00 | 6            |
| STEVE JOBS      | 2010-08-12 00:00:00 | 6            |
| RAVINDRAN       | 2017-02-02 00:00:00 | 5            |
| SATYA NADENDLA  | NULL                | 5            |
| ARAVIND         | 2002-01-01 00:00:00 | 4            |
| HARSHA KUMAR    | 2020-02-02 00:00:00 | 4            |
| RAJENDRAN       | 2094-03-01 00:00:00 | 4            |
| KIRAN           | 2012-04-14 00:00:00 | 3            |
| SUNDAR PICHAI   | 2001-01-01 00:00:00 | 2            |
| ALBERT EINSTEIN | 2005-09-02 00:00:00 | 2            |
| JEFF BEZOS      | 2007-05-19 00:00:00 | 2            |
| MARK ZUCKERBERG | 2006-02-26 00:00:00 | 1            |
| RAGHAVENDRAN    | 2017-02-02 00:00:00 | 1            |
| THOMAS EDISON   | NULL                | 1            |
+-----------------+---------------------+--------------+



18. List the name of instructors starting with ‘R’ and ending with ‘n’

SELECT INSTRUCTORNAME FROM INSTRUCTOR WHERE INSTRUCTORNAME LIKE 'R%N';

+----------------+
| instructorname |
+----------------+
| RAVINDRAN      |
| RAJENDRAN      |
| RAGHAVENDRAN   |
+----------------+

#19. List the details of instructors whose date of joining is in the month of March.

SELECT INSTRUCTORNAME,FROM_UNIXTIME(UNIX_TIMESTAMP(DATEOFJOINING,'dd-MMM-yy')) DOJ FROM INSTRUCTOR
WHERE MONTH(FROM_UNIXTIME(UNIX_TIMESTAMP(DATEOFJOINING,'dd-MMM-yy'))) = 3;

+----------------+---------------------+
| instructorname | doj                 |
+----------------+---------------------+
| RAJENDRAN      | 2094-03-01 00:00:00 |
+----------------+---------------------+


#20. List the details of applicant whose email id contains a character ‘_’



21. List the applicant who do not have email id in their applicant detail information .

SELECT APP_NAME,EMAIL FROM APPLICANT WHERE EMAIL IS NULL;

+----------------+-------+
| app_name       | email |
+----------------+-------+
| Raghu Ram      | NULL  |
| Ravindra Reddy | NULL  |
+----------------+-------+

22. List the course Id which has project Marks in its course detail information.

SELECT C.COURSE_ID,COURSE_NAME,PROJ_MARKS FROM COURSE C JOIN REGISTRATION R ON C.COURSE_ID = R.COURSE_ID
WHERE PROJ_MARKS IS NOT NULL;

+-----------+-------------------------+------------+
| course_id | course_name             | proj_marks |
+-----------+-------------------------+------------+
| C2        | UNIX SCRIPTING          | 19         |
| C1        | C PROGRAMMING           | 34         |
| C1        | C PROGRAMMING           | 9          |
| C4        | DATA MINING             | 27         |
| C4        | DATA MINING             | 20         |
| C8        | JAVA EE                 | 20         |
| C6        | ARTIFICIAL INTELLIGENCE | 28         |
| C6        | ARTIFICIAL INTELLIGENCE | 10         |
| C3        | CPP PROGRAMMING         | 19         |
| C3        | CPP PROGRAMMING         | 15         |
| C5        | OPERATING SYSEMS        | 23         |
+-----------+-------------------------+------------+
